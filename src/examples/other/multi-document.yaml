apiVersion: v1
kind: Namespace
metadata:
  name: application
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-service-account
  namespace: application
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: app-role
  namespace: application
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: app-role-binding
  namespace: application
subjects:
- kind: ServiceAccount
  name: app-service-account
  namespace: application
roleRef:
  kind: Role
  name: app-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: application
data:
  app.properties: |
    environment=production
    log.level=info
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: application
  namespace: application
spec:
  replicas: 3
  selector:
    matchLabels:
      app: application
  template:
    metadata:
      labels:
        app: application
    spec:
      serviceAccountName: app-service-account
      containers:
      - name: app
        image: app:1.0.0
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        securityContext:
          runAsUser: 1000
          allowPrivilegeEscalation: false
      volumes:
      - name: config-volume
        configMap:
          name: app-config
---
apiVersion: v1
kind: Service
metadata:
  name: app-service
  namespace: application
spec:
  selector:
    app: application
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP